--접속유저의 모든 테이블 및 제약조건 삭제
DO $$ 
DECLARE
    r RECORD;
BEGIN
    FOR r IN (SELECT tablename FROM pg_tables WHERE schemaname = current_schema()) LOOP
        EXECUTE 'DROP TABLE ' || quote_ident(r.tablename) || ' CASCADE';
    END LOOP;
END $$;


--접속유저의 모든 시퀀스 삭제
DO $$
DECLARE
    r RECORD;
BEGIN
    FOR r IN (SELECT sequence_name FROM information_schema.sequences WHERE sequence_schema = current_schema()) LOOP
        EXECUTE 'DROP SEQUENCE ' || quote_ident(r.sequence_name);
    END LOOP;
END $$;


--접속유저의 모든 뷰 삭제
DO $$
DECLARE
    r RECORD;
BEGIN
    FOR r IN (SELECT table_name FROM information_schema.views WHERE table_schema = current_schema()) LOOP
        EXECUTE 'DROP VIEW ' || quote_ident(r.table_name);
    END LOOP;
END $$;

-- 접속 유저의 모든 트리거 삭제
DO $$
DECLARE
    r RECORD;
BEGIN
    FOR r IN (SELECT trigger_name FROM information_schema.triggers WHERE trigger_schema = current_schema()) LOOP
        EXECUTE 'DROP TRIGGER ' || quote_ident(r.trigger_name) || ' ON ' || quote_ident(r.table_name);
    END LOOP;
END $$;
--------------------------------------------------------------------------
------------------------------ 테이블 생성 ---------------------------------
--------------------------------------------------------------------------

-------------------------------------------------------------------------------------------
-- MEMBER 테이블 생성
CREATE TABLE MEMBER (
    MEMBER_NO SERIAL PRIMARY KEY,
    MEMBER_EMAIL VARCHAR(100) NOT NULL UNIQUE,
    MEMBER_PWD VARCHAR(100) NOT NULL,
    MEMBER_NICKNAME VARCHAR(100) NOT NULL UNIQUE,
    MEMBER_PHONE VARCHAR(20) NOT NULL UNIQUE,
    MEMBER_GENDER VARCHAR(3) CHECK (MEMBER_GENDER IN ('M','F')),
    MEMBER_ADDRESS VARCHAR(500) NOT NULL,
    MEMBER_BIRTH VARCHAR(20) NOT NULL,
    MEMBER_PROFILE VARCHAR(2000) DEFAULT 'defaultUserImg.png' NULL,
    MEMBER_GRADE VARCHAR(20) DEFAULT '브론즈' NOT NULL,
    MEMBER_ENROLL_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
    MEMBER_MODIFY_DATE DATE NULL,
    MEMBER_STATUS CHAR(1) DEFAULT 'Y' CHECK (MEMBER_STATUS IN ('Y', 'N')) NOT NULL,
    ALARM_STATUS CHAR(1) DEFAULT 'Y' CHECK (ALARM_STATUS IN ('Y', 'N')),
    LOGIN_SIGN_PATH INTEGER CHECK (LOGIN_SIGN_PATH IN ('1','2','3') )NULL,
	ADMIN_STATUS CHAR(1) DEFAULT 'N' CHECK(ADMIN_STATUS IN ('Y','N')) 
);

COMMENT ON COLUMN MEMBER.MEMBER_NO IS '회원 번호';
COMMENT ON COLUMN MEMBER.MEMBER_EMAIL IS '회원 이메일';
COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '회원 비밀번호';
COMMENT ON COLUMN MEMBER.MEMBER_NICKNAME IS '회원 닉네임';
COMMENT ON COLUMN MEMBER.MEMBER_PHONE IS '회원 전화번호';
COMMENT ON COLUMN MEMBER.MEMBER_GENDER IS '회원 성별 남("M")/여("F")';
COMMENT ON COLUMN MEMBER.MEMBER_ADDRESS IS '회원 주소';
COMMENT ON COLUMN MEMBER.MEMBER_BIRTH IS '회원 생년월일';
COMMENT ON COLUMN MEMBER.MEMBER_PROFILE IS '사용자 프로필사진';
COMMENT ON COLUMN MEMBER.MEMBER_GRADE IS '회원 등급 : 브론즈 / 실버 / 골드 / 플레티넘/ 다이야';
COMMENT ON COLUMN MEMBER.MEMBER_ENROLL_DATE IS '회원가입 날짜';
COMMENT ON COLUMN MEMBER.MEMBER_MODIFY_DATE IS '탈퇴한 날짜';
COMMENT ON COLUMN MEMBER.MEMBER_STATUS IS '탈퇴 상태  ("Y" / "N" )';
COMMENT ON COLUMN MEMBER.ALARM_STATUS IS '알람 동의 상태 ( "Y" /  "N")';
COMMENT ON COLUMN MEMBER.LOGIN_SIGN_PATH IS '(1 : 네이버  /  2 : 카카오  /  3: 구글 )';

CREATE EXTENSION IF NOT EXISTS pgcrypto; 

INSERT INTO MEMBER (
    MEMBER_EMAIL, MEMBER_PWD, MEMBER_NICKNAME, MEMBER_PHONE, 
    MEMBER_ADDRESS, MEMBER_BIRTH, MEMBER_PROFILE, MEMBER_GRADE, 
    MEMBER_STATUS, ALARM_STATUS, ADMIN_STATUS
) VALUES (
    'admin@example.com', crypt('1234', gen_salt('bf')), 'admin', '1234567890', 
    '123 Street, City', '2000-01-01', 'user01.png', '브론즈', 
    'Y', 'Y','Y'
);
CREATE SEQUENCE SEQ_MEMNO;

-------------------------------------------------------------------------------------------
--냉장고식재료
CREATE TABLE REFRIGERATOR (
	REF_NO SERIAL PRIMARY KEY,	
	REF_THUMBNAIL VARCHAR(2000) NULL,
	REF_NAME VARCHAR(100) NOT NULL,
	REF_FRESH INTEGER DEFAULT 1 NOT NULL CHECK(REF_FRESH IN('1','2','3')),
	REF_CONSUMPTION_DATE DATE DEFAULT (CURRENT_DATE + INTERVAL '7 days') NOT NULL,	
	REF_COUNT NUMERIC DEFAULT 0 NOT NULL,	
	REF_INPUT_DATE DATE DEFAULT CURRENT_DATE NOT NULL,	
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NULL
);

COMMENT ON COLUMN REFRIGERATOR.REF_NO IS '회원 냉장고 번호';
COMMENT ON COLUMN REFRIGERATOR.REF_THUMBNAIL IS '식재료 썸네일사진';
COMMENT ON COLUMN REFRIGERATOR.REF_NAME IS '식재료 명';
COMMENT ON COLUMN REFRIGERATOR.REF_FRESH IS '식재료 신선도 : 신선 (1) / 보통(2) / 위험(3)';
COMMENT ON COLUMN REFRIGERATOR.REF_CONSUMPTION_DATE IS '식재료 소비기한';
COMMENT ON COLUMN REFRIGERATOR.REF_COUNT IS '식재료 개수';
COMMENT ON COLUMN REFRIGERATOR.REF_INPUT_DATE IS '식재료 냉장고 입고 날짜';
COMMENT ON COLUMN REFRIGERATOR.STATUS IS '식재료 유무상태 ("Y" / "N")';
	
CREATE SEQUENCE SEQ_REFNO;

--나의 냉장고 외래키 
ALTER TABLE REFRIGERATOR 
ADD COLUMN MEMBER_NO INTEGER, 
ADD CONSTRAINT FK_MEMBER_TO_REFRIGERATOR 
	FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO) -- MEMBER 테이블의 MEMBER_NO 열을 참조
	ON DELETE CASCADE; --부모 테이블 삭제시 자식도 삭제 시킴


-------------------------------------------------------------------------------------------
--알림

create table notify (
	notify_no serial PRIMARY key,
	notify_isread BOOLEAN not null default false,
	notify_type INTEGER not null CHECK ( notify_type in ( '1', '2', '3', '4', '5')),
	notify_content varchar(255) not null,
	notify_url varchar(255) not null,
	notify_create_at date default CURRENT_DATE,
	notify_member_no INTEGER not null
);

--알림 외래키
ALTER TABLE notify
ADD CONSTRAINT FK_MEMBER_TO_notify
	FOREIGN KEY (notify_member_no) REFERENCES MEMBER
	ON DELETE CASCADE;

COMMENT ON COLUMN notify.notify_type IS '좋아요 (1) / 댓글 (2) / 문의 (3) / 후기(4) / 소비기한(5)';



-------------------------------------------------------------------------------------------
--팔로워관계

CREATE TABLE FOLLOW(
	FOLLOWING_NO INTEGER NOT NULL,
	FOLLOWER_NO INTEGER NOT NULL,
	FOLLOW_DATE DATE DEFAULT CURRENT_DATE NOT NULL
);

COMMENT ON COLUMN FOLLOW.FOLLOWING_NO IS '팔로잉 번호';
COMMENT ON COLUMN FOLLOW.FOLLOWER_NO IS '팔로워 번호';
COMMENT ON COLUMN FOLLOW.FOLLOW_DATE IS '팔로잉, 팔로워 날짜';

--팔로워 외래키
ALTER TABLE FOLLOW
ADD CONSTRAINT FK_FOLLOWING_NO
FOREIGN KEY (FOLLOWING_NO) REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE,
ADD CONSTRAINT FK_FOLLOWER_NO
FOREIGN KEY (FOLLOWER_NO) REFERENCES MEMBER(MEMBER_NO) ON DELETE CASCADE;


-------------------------------------------------------------------------------------------
--레시피

CREATE TABLE RECIPE(
	RCP_NO SERIAL PRIMARY KEY,
	RCP_TITLE VARCHAR(500) ,
	RCP_CONTENT VARCHAR(2000) ,
	RCP_VIDEO VARCHAR(1000) NULL,
	RCP_MAIN_PHOTO VARCHAR(1000) ,
	RCP_TAG VARCHAR(500) NULL,
	RCP_WRITE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	COOK_AMOUNT VARCHAR(20),
	COOK_TIME VARCHAR(20) ,
	COOK_KIND VARCHAR(50),
	COOK_LEVEL VARCHAR(3) ,
	RCP_VIEW NUMERIC DEFAULT 0 ,
	STATUS CHAR(1) DEFAULT 'Y' CHECK(STATUS IN('Y','N')) 
);

COMMENT ON COLUMN RECIPE.RCP_NO IS '레시피 글번호';
COMMENT ON COLUMN RECIPE.RCP_TITLE IS '레시피 글 제목';
COMMENT ON COLUMN RECIPE.RCP_CONTENT IS '레시피 소개';
COMMENT ON COLUMN RECIPE.RCP_VIDEO IS '레시피 동영상';
COMMENT ON COLUMN RECIPE.RCP_MAIN_PHOTO IS '대표 썸네일 사진';
COMMENT ON COLUMN RECIPE.RCP_TAG IS '태그';
COMMENT ON COLUMN RECIPE.RCP_WRITE_DATE IS '레시피 글 작성한 날짜';
COMMENT ON COLUMN RECIPE.COOK_AMOUNT IS '음식양';
COMMENT ON COLUMN RECIPE.COOK_TIME IS '요리 시간';
COMMENT ON COLUMN RECIPE.COOK_KIND IS '요리 종류';
COMMENT ON COLUMN RECIPE.COOK_LEVEL IS '요리 난이도';
COMMENT ON COLUMN RECIPE.RCP_VIEW IS '레시피 조회수';
COMMENT ON COLUMN RECIPE.STATUS IS '레시피 상태';

CREATE SEQUENCE SEQ_RCPNO;

ALTER TABLE RECIPE
	ADD COLUMN MEMBER_NO INTEGER,
	ADD CONSTRAINT FK_MEMBER_TO_RECIPE
	FOREIGN KEY(MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
	ON DELETE CASCADE;



-------------------------------------------------------------------------------------------
--조리순서 

CREATE TABLE COOK_ORDER(
	COOK_ORD_NO SERIAL PRIMARY KEY,
	COOK_ORD_CONTENT VARCHAR(1000) NOT NULL,
	COOK_ORD_PHOTO VARCHAR(1000) NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);


COMMENT ON COLUMN  COOK_ORDER.COOK_ORD_NO IS '요리순서 번호';
COMMENT ON COLUMN COOK_ORDER.COOK_ORD_CONTENT IS '요리순서내용';
COMMENT ON COLUMN COOK_ORDER.COOK_ORD_PHOTO IS '요리 손질사진';
COMMENT ON COLUMN COOK_ORDER.STATUS IS '상태';

CREATE SEQUENCE SEQ_CKONO;

ALTER TABLE COOK_ORDER
    ADD COLUMN RCP_NO INTEGER,
    ADD CONSTRAINT FK_RECIPE_TO_COOK_ORDER
    FOREIGN KEY (RCP_NO) REFERENCES RECIPE (RCP_NO)
    ON DELETE CASCADE;

-------------------------------------------------------------------------------------------
--요리추가 팁

CREATE TABLE COOK_TIP(
	COOK_TIP_NO SERIAL PRIMARY KEY,
	COOK_TIP_CONTENT VARCHAR(500),
	STATUS CHAR(1) DEFAULT  'Y' CHECK(STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN COOK_TIP.COOK_TIP_NO IS '추가 기능 번호';
COMMENT ON COLUMN COOK_TIP.STATUS IS '상태';

CREATE SEQUENCE SEQ_CKTNO;

ALTER TABLE COOK_TIP
    ADD COLUMN COOK_ORD_NO INTEGER,
    ADD CONSTRAINT FK_COOK_ORD_NO_TO_COOK_TIP
    FOREIGN KEY (COOK_ORD_NO) REFERENCES COOK_ORDER (COOK_ORD_NO)
    ON DELETE CASCADE;


-------------------------------------------------------------------------------------------
--재료 분류
CREATE TABLE DIVISION(
	DIV_NO SERIAL PRIMARY KEY,
	DIV_NAME VARCHAR(30) NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN DIVISION.DIV_NO IS '분류 번호';
COMMENT ON COLUMN DIVISION.DIV_NAME IS '분류 이름';
COMMENT ON COLUMN DIVISION.STATUS IS '분류 상태';

CREATE SEQUENCE SEQ_DIVNO;

ALTER TABLE DIVISION
    ADD COLUMN RCP_NO INTEGER,
    ADD CONSTRAINT FK_RECIPE_TO_DIVISION
    FOREIGN KEY (RCP_NO) REFERENCES RECIPE (RCP_NO)
    ON DELETE CASCADE;


-------------------------------------------------------------------------------------------
--재료 정보

CREATE TABLE INGREDIENTS_INFO(
	INGRE_NO SERIAL PRIMARY KEY,
	INGRE_NAME VARCHAR(50) NOT NULL,
	INGRE_AMOUNT NUMERIC NOT NULL,
	INGRE_UNIT VARCHAR(20) NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN INGREDIENTS_INFO.INGRE_NO IS '재료 정보번호';
COMMENT ON COLUMN INGREDIENTS_INFO.INGRE_NAME IS '재료 이름';
COMMENT ON COLUMN INGREDIENTS_INFO.INGRE_AMOUNT IS '재료 수량';
COMMENT ON COLUMN INGREDIENTS_INFO.INGRE_UNIT IS '재료 단위';
COMMENT ON COLUMN INGREDIENTS_INFO.STATUS IS '재료정보 상태';

CREATE SEQUENCE SEQ_INGRENO;

ALTER TABLE INGREDIENTS_INFO
    ADD COLUMN DIV_NO INTEGER,
    ADD CONSTRAINT FK_DIVISION_TO_INGREDIENTS_INFO
    FOREIGN KEY (DIV_NO) REFERENCES DIVISION (DIV_NO)
    ON DELETE CASCADE;


-------------------------------------------------------------------------------------------
--상품

CREATE TABLE PRODUCT(
	PRODUCT_NO SERIAL PRIMARY KEY,
	SELLER VARCHAR(500) NOT NULL,
	CATEGORY VARCHAR(1000) NULL,
	PRODUCT_NAME VARCHAR(1000) NOT NULL,
	PRODUCT_BRAND VARCHAR(255) NOT NULL,
	NORMAL_PRICE NUMERIC NOT NULL,
	SALE_PRICE NUMERIC NOT NULL,
	DISCOUNT NUMERIC NOT NULL,
	MAIN_IMG VARCHAR(1000) NOT NULL,
	DESCRIPTION VARCHAR(5000) NOT NULL,
	SHIPMENT_TYPE VARCHAR(50) NOT NULL,
	SHIPMENT_TIME NUMERIC NOT NULL,
	SHIPPING_PRICE NUMERIC NOT NULL,
	PRODUCT_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	PRODUCT_VIEW NUMERIC DEFAULT 0,
	SCRAP_COUNT NUMERIC DEFAULT 0,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN PRODUCT.PRODUCT_NO IS '상품 번호';
COMMENT ON COLUMN PRODUCT.SELLER IS '판매자';
COMMENT ON COLUMN PRODUCT.CATEGORY IS '상품 카테고리';
COMMENT ON COLUMN PRODUCT.PRODUCT_NAME IS '상품명';
COMMENT ON COLUMN PRODUCT.PRODUCT_BRAND IS '상품 브랜드';
COMMENT ON COLUMN PRODUCT.NORMAL_PRICE IS '상품 정상가';
COMMENT ON COLUMN PRODUCT.SALE_PRICE IS '상품 판매가';
COMMENT ON COLUMN PRODUCT.DISCOUNT IS '상품 할인율';
COMMENT ON COLUMN PRODUCT.MAIN_IMG IS '상품 대표이미지';
COMMENT ON COLUMN PRODUCT.DESCRIPTION IS '상품 상세설명';
COMMENT ON COLUMN PRODUCT.SHIPMENT_TYPE IS '배송 방법';
COMMENT ON COLUMN PRODUCT.SHIPMENT_TIME IS '배송 기간';
COMMENT ON COLUMN PRODUCT.SHIPPING_PRICE IS '배송비';
COMMENT ON COLUMN PRODUCT.PRODUCT_DATE IS '상품생성일';
COMMENT ON COLUMN PRODUCT.SHIPPING_PRICE IS '조회수';
COMMENT ON COLUMN PRODUCT.PRODUCT_VIEW IS '스크랩수';
COMMENT ON COLUMN PRODUCT.STATUS IS '상품 상태';

CREATE SEQUENCE SEQ_PRODUCTNO;


-------------------------------------------------------------------------------------------
--주문

CREATE TABLE ORDERS(
	ORDER_NO SERIAL PRIMARY KEY,
	FINAL_PRICE NUMERIC NOT NULL,
	ORDER_MEMO VARCHAR(1000) NULL,
	PAYMENT_TYPE VARCHAR(50) NOT NULL,
	ORDER_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	buyer_name varchar(50) NOT NULL,
	buyer_email varchar(1000) NOT NULL,
	buyer_phone varchar(20) NOT NULL,
	recipient_name varchar(50) NOT NULL,
	recipient_address varchar(1000) NOT NULL,
	recipient_phone varchar(20) NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN ORDERS.ORDER_NO IS '주문 번호';
COMMENT ON COLUMN ORDERS.FINAL_PRICE IS '최종 결제 금액';
COMMENT ON COLUMN ORDERS.ORDER_MEMO IS '요청사항';
COMMENT ON COLUMN ORDERS.PAYMENT_TYPE IS '결재 수단';
COMMENT ON COLUMN ORDERS.ORDER_DATE IS '주문일자';
COMMENT ON COLUMN ORDERS.buyer_name IS '주문자 성명';
COMMENT ON COLUMN ORDERS.buyer_email IS '주문자 이메일';
COMMENT ON COLUMN ORDERS.buyer_phone IS '주문자 전화번호';
COMMENT ON COLUMN ORDERS.recipient_name IS '수령자 성명';
COMMENT ON COLUMN ORDERS.recipient_address IS '수령자  주소';
COMMENT ON COLUMN ORDERS.recipient_phone IS '수령자 전화번호';
COMMENT ON COLUMN ORDERS.STATUS IS '주문 상태';


ALTER TABLE ORDERS
	 ADD COLUMN MEMBER_NO INTEGER,
    ADD CONSTRAINT FK_MEMBER_TO_ORDERS
    FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
    ON DELETE CASCADE;

CREATE SEQUENCE SEQ_ORDERSNO;


-------------------------------------------------------------------------------------------
--상품 옵션 소분류
CREATE TABLE OPTION_NAME(
	OPTIONS_NAME_NO SERIAL PRIMARY KEY,
	OPTIONS_NAME VARCHAR(255) NOT NULL,
	MAIN_OPTION BOOLEAN NOT NULL,
	OPTIONS_NORMAL_PRICE NUMERIC NOT NULL,
	OPTIONS_SALE_PRICE NUMERIC NOT NULL,
	OPTIONS_STOCK NUMERIC NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN OPTION_NAME.OPTIONS_NAME_NO IS '옵션소분류번호';
COMMENT ON COLUMN OPTION_NAME.OPTIONS_NAME IS '옵션 소분류명';
COMMENT ON COLUMN OPTION_NAME.MAIN_OPTION IS '대표옵션';
COMMENT ON COLUMN OPTION_NAME.OPTIONS_STOCK IS '재고량';
COMMENT ON COLUMN OPTION_NAME.OPTIONS_NORMAL_PRICE IS '정상가';
COMMENT ON COLUMN OPTION_NAME.OPTIONS_SALE_PRICE IS '판매가';
COMMENT ON COLUMN OPTION_NAME.STATUS IS '상태( "Y" / "N" )';

CREATE SEQUENCE SEQ_OPTION_NAMENO;

ALTER TABLE OPTION_NAME
    ADD COLUMN PRODUCT_NO INTEGER,
    ADD CONSTRAINT FK_PRODUCT_TO_OPTION_NAME
	FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT (PRODUCT_NO)
	ON DELETE CASCADE;
-------------------------------------------------------------------------------------------
--장바구니

CREATE TABLE PRODUCT_CART(
	OPTION_QUANTITY NUMERIC NOT NULL,
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN PRODUCT_CART.STATUS IS '장바구니 상태 ( "Y" / "N" )';

ALTER TABLE PRODUCT_CART
    ADD COLUMN MEMBER_NO INTEGER,
	   ADD COLUMN OPTIONS_NAME_NO INTEGER,
    ADD CONSTRAINT FK_MEMBER_TO_PRODUCT_CART
        FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
        ON DELETE CASCADE,
	 ADD CONSTRAINT FK_OPTIONS_NAME_NO_TO_PRODUCT_CART
        FOREIGN KEY (OPTIONS_NAME_NO) REFERENCES OPTION_NAME (OPTIONS_NAME_NO)
        ON DELETE CASCADE,
    ADD CONSTRAINT PK_PRODUCT_CART 
        PRIMARY KEY (MEMBER_NO,OPTIONS_NAME_NO);

-------------------------------------------------------------------------------------------
--주문 상품 옵션
CREATE TABLE ORDER_PDOPT(
	QUANTITY NUMERIC NOT NULL,
	ORDER_PDOPT_PRICE NUMERIC NOT NULL
);

COMMENT ON COLUMN ORDER_PDOPT.QUANTITY IS '수량';

ALTER TABLE ORDER_PDOPT
    ADD COLUMN ORDER_NO INTEGER,
    ADD COLUMN OPTIONS_NAME_NO INTEGER,
    ADD CONSTRAINT FK_ORDERS_TO_ORDER_PDOPT
        FOREIGN KEY (ORDER_NO) REFERENCES ORDERS (ORDER_NO)
        ON DELETE CASCADE,
    ADD CONSTRAINT FK_OPTIONS_NAME_TO_ORDER_PDOPT
        FOREIGN KEY (OPTIONS_NAME_NO) REFERENCES OPTION_NAME (OPTIONS_NAME_NO)
        ON DELETE CASCADE,
    ADD CONSTRAINT PK_PRODUCT_OPTIONS 
        PRIMARY KEY (ORDER_NO, OPTIONS_NAME_NO);


---------------------------------------------------------------------------------------------
--게시글
CREATE TABLE BOARD(
	BOARD_NO SERIAL PRIMARY KEY,
	 BOARD_TITLE VARCHAR(100) NOT NULL,
	 BOARD_CONTENT VARCHAR(5000) NOT NULL,
	 BOARD_CREATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	 BOARD_VIEWS NUMERIC  DEFAULT 0 NOT NULL,
	 BOARD_TAG VARCHAR(255) NULL,
	 BOARD_VOTE NUMERIC DEFAULT 0 NOT NULL, 
	 BOARD_THUMBNAIL VARCHAR(2000) NOT NULL,
	 STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL 
 );

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글 번호';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글 제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글 내용';
COMMENT ON COLUMN BOARD.BOARD_CREATE_DATE IS '게시글 작성일';
COMMENT ON COLUMN BOARD.BOARD_VIEWS IS '게시글 조회수';
COMMENT ON COLUMN BOARD.BOARD_TAG IS '태그';
COMMENT ON COLUMN BOARD.BOARD_VOTE IS '추천수(좋아요)';
COMMENT ON COLUMN BOARD.BOARD_THUMBNAIL IS '대표이미지';
COMMENT ON COLUMN BOARD.STATUS IS '게시글 상태 ( "Y" / "N"  )';

CREATE SEQUENCE SEQ_BOARDNO;

ALTER TABLE BOARD 
ADD COLUMN MEMBER_NO INTEGER, 
ADD CONSTRAINT FK_MEMBER_TO_BOARD
	FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO) 
	ON DELETE CASCADE;

---------------------------------------------------------------------------------------------
--신고
CREATE TABLE REPORT(
	REPORT_NO SERIAL PRIMARY KEY,
	REPORT_WHY VARCHAR(100) NOT NULL,
	REPORT_CONTENT VARCHAR(1000) NOT NULL
);

COMMENT ON COLUMN REPORT.REPORT_NO IS '신고 번호';
COMMENT ON COLUMN REPORT.REPORT_WHY IS '신고 사유';
COMMENT ON COLUMN REPORT.REPORT_CONTENT IS '신고 상세내용';

CREATE SEQUENCE SEQ_REPORTNO;

ALTER TABLE REPORT
ADD COLUMN BOARD_NO INTEGER,
ADD COLUMN MEMBER_NO INTEGER,
ADD CONSTRAINT FK_BOARD_TO_REPORT
FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_MEMBER_TO_REPORT
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
ON DELETE CASCADE;
	
---------------------------------------------------------------------------------------------
--게시글 미디어
CREATE TABLE MEDIA(
	MEDIA_NO SERIAL PRIMARY KEY,
	MEDIA_TYPE NUMERIC NOT NULL CHECK(MEDIA_TYPE IN ('1','2')),
	MEDIA_KIND NUMERIC NOT NULL CHECK(MEDIA_KIND IN ('1','2','3')),
	FILE_PATH VARCHAR(1000) NOT NULL,
	UPLOAD_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	ORIGIN_NAME VARCHAR(255) NOT NULL,
	CHANGE_NAME VARCHAR(255) NOT NULL,
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL 
);

COMMENT ON COLUMN MEDIA.MEDIA_NO IS '미디어 번호';
COMMENT ON COLUMN MEDIA.MEDIA_TYPE IS '미디어 타입: 사진(1) / 동영상(2)'; 
COMMENT ON COLUMN MEDIA.MEDIA_KIND IS '미디어 구분: 레시피 작성(1)  /  상품소개(2) / 자유게시판 (3)';
COMMENT ON COLUMN MEDIA.FILE_PATH IS '저장경로';
COMMENT ON COLUMN MEDIA.UPLOAD_DATE IS '업로드일시';
COMMENT ON COLUMN MEDIA.ORIGIN_NAME IS '파일 원본명';
COMMENT ON COLUMN MEDIA.CHANGE_NAME IS '파일 수정명';
COMMENT ON COLUMN MEDIA.STATUS IS '미디어 상태 ( "Y" / "N"  )';

CREATE SEQUENCE SEQ_MEDIANO;

ALTER TABLE MEDIA
ADD COLUMN BOARD_NO INTEGER NULL,
ADD COLUMN PRODUCT_NO INTEGER NULL,
ADD COLUMN RCP_NO INTEGER NULL,
ADD CONSTRAINT FK_BOARD_TO_MEDIA
FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_PRODUCT_TO_MEDIA
FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT (PRODUCT_NO)
ON DELETE CASCADE,	
ADD CONSTRAINT FK_RECIPE_TO_MEDIA
FOREIGN KEY (RCP_NO) REFERENCES RECIPE (RCP_NO)
ON DELETE CASCADE;

---------------------------------------------------------------------------------------------
--댓글
CREATE TABLE COMMENTS(
	COMMENT_NO SERIAL PRIMARY KEY,
	COMMENT_CONTENT VARCHAR(500) NOT NULL,
	COMMENT_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	COMMENT_ANSWER_TYPE NUMERIC NOT NULL CHECK(COMMENT_ANSWER_TYPE IN ('1','2')),
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL 
);

COMMENT ON COLUMN COMMENTS.COMMENT_NO IS '댓글질답 번호';
COMMENT ON COLUMN COMMENTS.COMMENT_CONTENT IS '댓글 내용';
COMMENT ON COLUMN COMMENTS.COMMENT_DATE IS '댓글 작성일';
COMMENT ON COLUMN COMMENTS.COMMENT_ANSWER_TYPE IS '댓글(1) 답변(2)';
COMMENT ON COLUMN COMMENTS.STATUS IS '댓글 상태 ';

CREATE SEQUENCE SEQ_COMMENTSNO;

ALTER TABLE COMMENTS
ADD COLUMN BOARD_NO INTEGER,
ADD COLUMN REF_COMMENT_NO INTEGER NULL,
ADD COLUMN MEMBER_NO INTEGER,
ADD CONSTRAINT FK_BOARD_TO_COMMENTS
FOREIGN KEY (BOARD_NO) REFERENCES BOARD (BOARD_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_COMMENTS_TO_COMMENTS
FOREIGN KEY (REF_COMMENT_NO) REFERENCES COMMENTS (COMMENT_NO) 
ON DELETE CASCADE,  
ADD CONSTRAINT FK_MEMBER_TO_COMMENTS
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
ON DELETE CASCADE;


-----------------------------------------------------------------------
--질의 응답
CREATE TABLE QNA(
	QNA_NO SERIAL PRIMARY KEY,
	QNA_CONTENT VARCHAR(500) NOT NULL,
	QNA_CREATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	QNA_TYPE NUMERIC NOT NULL CHECK(QNA_TYPE IN ('1','2')),
	QNA_ANSWER_TYPE NUMERIC NOT NULL CHECK(QNA_ANSWER_TYPE IN ('1','2')),
	QNA_PHOTO VARCHAR(1000) NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL 
);

COMMENT ON COLUMN QNA.QNA_NO IS '질답 번호';
COMMENT ON COLUMN QNA.QNA_CONTENT IS '문의 내용';
COMMENT ON COLUMN QNA.QNA_CREATE_DATE IS '문의 작성일';
COMMENT ON COLUMN QNA.QNA_TYPE IS '문의 종류: 상품 (1)/ 레시피(2)';
COMMENT ON COLUMN QNA.QNA_ANSWER_TYPE IS 'QNA 종류: 질문 (1)/ 답변(2)';
COMMENT ON COLUMN QNA.QNA_PHOTO IS '첨부사진';
COMMENT ON COLUMN QNA.STATUS IS '질답 상태';

CREATE SEQUENCE SEQ_QNANO;

ALTER TABLE QNA
ADD COLUMN REF_QNA_NO INTEGER NULL,
ADD COLUMN RCP_NO INTEGER,
ADD COLUMN PRODUCT_NO INTEGER,
ADD COLUMN MEMBER_NO INTEGER,
ADD COLUMN PDOPT_NO INTEGER,
ADD CONSTRAINT FK_QNA_TO_QNA
FOREIGN KEY (REF_QNA_NO) REFERENCES QNA (QNA_NO) 
ON DELETE CASCADE,  
ADD CONSTRAINT FK_RECIP_TO_QNA
FOREIGN KEY (RCP_NO) REFERENCES RECIPE (RCP_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_PRODUCT_TO_QNA
FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT(PRODUCT_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_MEMBER_TO_QNA
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_OPTION_NAME_TO_QNA
FOREIGN KEY (PDOPT_NO) REFERENCES OPTION_NAME (OPTIONS_NAME_NO)
ON DELETE CASCADE;

---------------------------------------------------------------------------------------------
--후기
CREATE TABLE REVIEW(
	REVIEW_NO SERIAL PRIMARY KEY,
	REVIEW_CONTENT VARCHAR(500) NOT NULL,
	REVIEW_CREATE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	RATING NUMERIC NOT NULL,
	REVIEW_PHOTO VARCHAR(1000),
	REVIEW_TYPE	NUMERIC CHECK(REVIEW_TYPE IN (1,2)) NOT NULL,
	STATUS CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL 
);

COMMENT ON COLUMN REVIEW.REVIEW_NO IS '후기 번호';
COMMENT ON COLUMN REVIEW.REVIEW_CONTENT IS '후기 내용';
COMMENT ON COLUMN REVIEW.REVIEW_CREATE_DATE IS '후기 작성일';
COMMENT ON COLUMN REVIEW.RATING IS '평점';
COMMENT ON COLUMN REVIEW.REVIEW_PHOTO IS '첨부사진';
COMMENT ON COLUMN REVIEW.REVIEW_TYPE IS '후기 종류(1번 제품 2번 레시피)';
COMMENT ON COLUMN REVIEW.STATUS IS '상태';

CREATE SEQUENCE SEQ_REVIEWNO;

ALTER TABLE REVIEW
ADD COLUMN RCP_NO INTEGER,
ADD COLUMN PRODUCT_NO INTEGER,
ADD COLUMN MEMBER_NO INTEGER,
ADD COLUMN PDOPT_NO INTEGER,
ADD CONSTRAINT FK_RECIPE_TO_REVIEW
FOREIGN KEY (RCP_NO) REFERENCES RECIPE (RCP_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_PRODUCT_TO_REVIEW
FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT(PRODUCT_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_MEMBER_TO_REVIEW
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER (MEMBER_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_OPTION_NAME_TO_REVIEW
FOREIGN KEY (PDOPT_NO) REFERENCES OPTION_NAME (OPTIONS_NAME_NO)
ON DELETE CASCADE;


-------------------------------------------------------------------------------------------
--스크랩 게시글
CREATE TABLE SCRAP_BOARD(
	SCRAP_BOARD_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);
COMMENT ON COLUMN SCRAP_BOARD.SCRAP_BOARD_DATE IS '스크랩 일';
COMMENT ON COLUMN SCRAP_BOARD.STATUS IS '스크랩 상태';

ALTER TABLE SCRAP_BOARD
ADD COLUMN MEMBER_NO INTEGER,
ADD COLUMN BOARD_NO INTEGER,
ADD CONSTRAINT FK_MEMBER_TO_SCRAP_BOARD
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_BOARD_TO_SCRAP_BOARD
FOREIGN KEY (BOARD_NO) REFERENCES BOARD(BOARD_NO)
ON DELETE CASCADE,
ADD CONSTRAINT PK_SCRAP_BOARD 
PRIMARY KEY (MEMBER_NO, BOARD_NO);


-------------------------------------------------------------------------------------------
--스크랩 상품
CREATE TABLE SCRAP_PRODUCT(
	SCRAP_PRODUCT_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);
COMMENT ON COLUMN SCRAP_PRODUCT.SCRAP_PRODUCT_DATE IS '스크랩 일';
COMMENT ON COLUMN SCRAP_PRODUCT.STATUS IS '스크랩 상태';

ALTER TABLE SCRAP_PRODUCT
ADD COLUMN MEMBER_NO INTEGER,
ADD COLUMN PRODUCT_NO INTEGER,
ADD CONSTRAINT FK_MEMBER_TO_SCRAP_PRODUCT
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_PRODUCT_TO_SCRAP_PRODUCT
FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT(PRODUCT_NO)
ON DELETE CASCADE,
ADD CONSTRAINT PK_SCRAP_PRODUCT
PRIMARY KEY (MEMBER_NO, PRODUCT_NO);


-------------------------------------------------------------------------------------------
--스크랩 레시피
CREATE TABLE SCRAP_RECIPE(
	SCRAP_RECIPE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);
COMMENT ON COLUMN SCRAP_RECIPE.SCRAP_RECIPE_DATE IS '스크랩 일';
COMMENT ON COLUMN SCRAP_RECIPE.STATUS IS '스크랩 상태';	

ALTER TABLE SCRAP_RECIPE
ADD COLUMN MEMBER_NO INTEGER,
ADD COLUMN RCP_NO INTEGER,
ADD CONSTRAINT FK_MEMBER_TO_SCRAP_RECIPE
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_PRODUCT_TO_SCRAP_RECIPE
FOREIGN KEY (RCP_NO) REFERENCES RECIPE(RCP_NO)
ON DELETE CASCADE,
ADD CONSTRAINT PK_SCRAP_RECIPE
PRIMARY KEY (MEMBER_NO, RCP_NO);


-------------------------------------------------------------------------------------------
--좋아요 게시글
CREATE TABLE LIKE_BOARD	(
	LIKE_BOARD_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);
COMMENT ON COLUMN LIKE_BOARD.LIKE_BOARD_DATE IS '좋아요일';
COMMENT ON COLUMN LIKE_BOARD.STATUS IS '좋아요 상태';

ALTER TABLE LIKE_BOARD
ADD COLUMN MEMBER_NO INTEGER,
ADD COLUMN BOARD_NO INTEGER,
ADD CONSTRAINT FK_MEMBER_TO_LIKE_BOARD
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_BOARD_TO_LIKE_BOARD
FOREIGN KEY (BOARD_NO) REFERENCES BOARD(BOARD_NO)
ON DELETE CASCADE,
ADD CONSTRAINT PK_LIKE_BOARD
PRIMARY KEY (MEMBER_NO, BOARD_NO);
	
-------------------------------------------------------------------------------------------
--좋아요 레시피
CREATE TABLE LIKE_RECIPE(
	LIKE_RECIPE_DATE DATE DEFAULT CURRENT_DATE NOT NULL,
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);

COMMENT ON COLUMN LIKE_RECIPE.LIKE_RECIPE_DATE IS '좋아요일';
COMMENT ON COLUMN LIKE_RECIPE.STATUS IS '좋아요 상태';

ALTER TABLE LIKE_RECIPE
ADD COLUMN MEMBER_NO INTEGER,
ADD COLUMN RCP_NO INTEGER,
ADD CONSTRAINT FK_MEMBER_TO_LIKE_RECIPE
FOREIGN KEY (MEMBER_NO) REFERENCES MEMBER(MEMBER_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_PRODUCT_TO_LIKE_RECIPE
FOREIGN KEY (RCP_NO) REFERENCES RECIPE(RCP_NO)
ON DELETE CASCADE,
ADD CONSTRAINT PK_LIKE_RECIPE
PRIMARY KEY (MEMBER_NO, RCP_NO);


-------------------------------------------------------------------------------------------
--레시피_추천 상품카테고리

CREATE TABLE RECIPE_PRODUCT_CATEGORY(
	STATUS  CHAR(1) DEFAULT 'Y' CHECK (STATUS IN('Y','N')) NOT NULL
);
	
COMMENT ON COLUMN RECIPE_PRODUCT_CATEGORY.STATUS IS '레시피_추천 상품카테고리 상태';

ALTER TABLE RECIPE_PRODUCT_CATEGORY
ADD COLUMN PRODUCT_NO INTEGER,
ADD COLUMN RCP_NO INTEGER,
ADD CONSTRAINT FK_PRODUCT_TO_LIKE_RECIPE
FOREIGN KEY (PRODUCT_NO) REFERENCES PRODUCT(PRODUCT_NO)
ON DELETE CASCADE,
ADD CONSTRAINT FK_RECIPE_TO_LIKE_RECIPE
FOREIGN KEY (RCP_NO) REFERENCES RECIPE(RCP_NO)
ON DELETE CASCADE,
ADD CONSTRAINT PK_RECIPE_PRODUCT_CATEGORY
PRIMARY KEY (PRODUCT_NO , RCP_NO);



-------------------------------------------------------------------------------------------------------------
------------------------------------------------------트리거--------------------------------------------------
-------------------------------------------------------------------------------------------------------------

-- CREATE OR REPLACE FUNCTION update_ingredients_status_after_division_delete()
-- RETURNS TRIGGER AS $$
-- BEGIN
--     UPDATE INGREDIENTS_INFO
--     SET status = 'N'
--     WHERE div_no = OLD.div_no;

--     RETURN OLD;
-- END;
-- $$ LANGUAGE plpgsql;

-- CREATE TRIGGER trigger_update_ingredients_status
-- AFTER DELETE ON DIVISION
-- FOR EACH ROW
-- EXECUTE FUNCTION update_ingredients_status_after_division_delete();

-- COMMIT;



----------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------
-- MEMBER 테이블에 데이터 삽입
INSERT INTO MEMBER (
    MEMBER_EMAIL,
    MEMBER_PWD,
    MEMBER_NICKNAME,
    MEMBER_PHONE,
    MEMBER_GENDER,
    MEMBER_ADDRESS,
    MEMBER_BIRTH,
    MEMBER_PROFILE,
    MEMBER_GRADE,
    MEMBER_ENROLL_DATE,
    MEMBER_MODIFY_DATE,
    MEMBER_STATUS,
    ALARM_STATUS,
    LOGIN_SIGN_PATH,
    ADMIN_STATUS
) VALUES
('kangsan1023@naver.com', '$2a$06$QGldzXHcPU9A.iWI9D1dyenJV5lETF1flMOmuedSJxC5zOAcEK8eG', '이강산', '1052622263', NULL, '서울 강남구 강남대로 320 310호', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('odg@gorang.com', '$2a$06$K8/NWoktcVwEodfbne8KQud47Hyb0Q9PhhR8v4POw4bEBxruYOPG2', 'odg', '1044443333', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('gkadbcjf@naver.com', '$2a$06$9q8Kobmp6.bVQ0jKZJvtzONuxYW6hpvBPO0oopELM9S3.E25AKDcO', 'gkadbcjf', '1234562791', NULL, '서울 은평구 갈현로3나길 22 센트레빌', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user01@example.com', '$2a$06$HqRoI344Ou8LEjA3KP94Reod7p9glvFmn8JWZW2gLSO89xKzmJzvO', 'user01', '1234567891', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user02@example.com', '$2a$06$z3PHn0og3i1yZqfMGT5XaO4MiU0bb9REpXBvoAEcWdQso.w7iuDQO', 'user02', '1234567892', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user03@example.com', '$2a$06$O17smOBt42YYaSMx6seN7.U4Z/JO2vnia2IUAITds7DeBsIYNjEi6', 'user03', '1234567893', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user04@example.com', '$2a$06$0ytwtwbdEtuT1cZEd5n/0OATUyCz.q8uRIZh.Jyry3guudOGGJUwK', 'user04', '1234567894', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user05@example.com', '$2a$06$CenJmKjG4H60NuAJ1IMxlu7LRpsxJ3fbzP9g6LrHM.uTDUojkw/WG', 'user05', '1234567895', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user06@example.com', '$2a$06$t9H20CaaAEyeYm92Vz1nqO/678o8nURwMHzB7C9jpXFjPGm7H7rx2', 'user06', '1234567896', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user07@example.com', '$2a$06$EPap1CE1a9FBHnv3dEzpNOjLtynqfatyO6VCNg2T3x8dkuN71mKBm', 'user07', '1234567897', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user08@example.com', '$2a$06$99oE.Cb7vcaPnzpVP3My6uArg/rc3zoa9H/n3mreC4yp9aTXoKdPe', 'user08', '1234567898', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user09@example.com', '$2a$06$L9jtwaP/VgbDlf1SdOZ5ruExis0YqISd8gH/QGxIE12r8/C1P375q', 'user09', '1234567899', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user10@example.com', '$2a$06$3kXpOvG2bOTGFqDp1OgKZ.0VbX6kPaX1ELxBD0ovNF5K96AN4OBFi', 'user10', '1234567800', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user11@example.com', '$2a$06$j6oAYSQOd1oYIeV9z0LeOeTv0h8EMIqbe/82mKZlmI9IUyrfvs.bm', 'user11', '1234567801', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user12@example.com', '$2a$06$Zls0TVmWFUy08Wja35dSNeT7oXetRmXR4kIWBCcSACIK2MFvqKbX2', 'user12', '1234567802', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user13@example.com', '$2a$06$7Rs6XYNnoQ.S0kA.Yy3seesT2bYFdOMC70ZysYB6hkcdrQjGsPoHa', 'user13', '1234567803', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user14@example.com', '$2a$06$fC6DfaTuLTZ3vwkLu1Tm5ONLI4Ud3X1knWPRjkj8loxv/Rue0hdVS', 'user14', '1234567804', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user15@example.com', '$2a$06$dUdi/Qra0nCYbfBva5jgX.j.HyHhNL2V1Hzhz/AvU7TeQF3sqPXiK', 'user15', '1234567805', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user16@example.com', '$2a$06$tur.JZm2UMZ9KpP9B9L53.KHmuMBV2UIwWmHWLys2P7pBXfcHiMRW', 'user16', '1234567806', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user17@example.com', '$2a$06$fgqCEITe.leLRX7xcnOwt.zlI9D2LvIK6LEpH8aFs5AlXp8C/JD66', 'user17', '1234567807', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user18@example.com', '$2a$06$pZiSEdM7mTaLP/dJTx79juNW7lHMtM1Fhd0FWNxXY2Oe85flCK/9q', 'user18', '1234567808', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user19@example.com', '$2a$06$y2N20qRhoO.FZ66EM2Jk2uyOO6kJ4rqBGHqgPSWaGDvMHUMZv.IwC', 'user19', '1234567809', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('user20@example.com', '$2a$06$Tji995r0WbPfhJi78u5.iuw5wfUI.H32lKkeLgwHgAXkxiDiT0AEe', 'user20', '1234567810', NULL, '123 Street, City', '2000-01-01', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'Y'),
('rkdalswl@naver.com', '$2a$10$fifRaiRTxRAsfx59ODzJsOnPvdntsZc5KbNaj9GrNPLIeVn15dBHy', 'kmj', '1012121212', 'F', '서울 강남구 선릉로 206 108동 504호', '2024-06-12 +09', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'N'),
('markdo@gmail.com', '$2a$10$66FLjmQf7plGH.pX4BTwzO9kYQI.DKaKw04DKWCEK4GIAwCmLeR6K', 'mardo', '1081818181', 'M', '서울 강남구 삼성로 629 209동 2902호', '2024-06-01 +09', 'defaultUserImg.png', '브론즈', '2024-06-21', NULL, 'Y', 'Y', NULL, 'N');
